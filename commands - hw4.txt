1a

REGISTER piggybank-0.12.0.jar;

define CSVLoader org.apache.pig.piggybank.storage.CSVLoader();

users = LOAD 'users.csv' USING org.apache.pig.piggybank.storage.CSVLoader()
        AS (userlogin:chararray, username:chararray, state:chararray);

tweets = LOAD 'tweets.csv' USING org.apache.pig.piggybank.storage.CSVLoader()
        AS (tweetid:chararray, tweetcontent:chararray, userlogin:chararray);

A = JOIN users BY userlogin, tweets BY userlogin;
B = FILTER A BY users::state == 'NY';
C = FOREACH B GENERATE users::userlogin, users::state;
STORE C into '1a.results' USING PigStorage ();


————

1b


REGISTER piggybank-0.12.0.jar;

define CSVLoader org.apache.pig.piggybank.storage.CSVLoader();

users = LOAD 'users.csv' USING org.apache.pig.piggybank.storage.CSVLoader()
        AS (userlogin:chararray, username:chararray, state:chararray);

tweets = LOAD 'tweets.csv' USING org.apache.pig.piggybank.storage.CSVLoader()
        AS (tweetid:chararray, tweetcontent:chararray, userlogin:chararray);

A = FILTER tweets BY (tweetcontent matches '.*favorite.*');                                   
DUMP A;
B = ORDER A BY tweetid;
C = FOREACH B GENERATE tweetid, tweetcontent;
STORE C into '1b.results' USING PigStorage ();


————

2b

REGISTER piggybank-0.12.0.jar;

define CSVLoader org.apache.pig.piggybank.storage.CSVLoader();

users = LOAD 'users.csv' USING org.apache.pig.piggybank.storage.CSVLoader()
        AS (userlogin:chararray, username:chararray, state:chararray);

tweets = LOAD 'tweets.csv' USING org.apache.pig.piggybank.storage.CSVLoader()
        AS (tweetid:chararray, tweetcontent:chararray, userlogin:chararray);

A = JOIN users BY userlogin, tweets BY userlogin;
B = FOREACH A GENERATE users::userlogin, state, username, tweetcontent, tweetid;
dump B;


———

3a

REGISTER piggybank-0.12.0.jar;

define CSVLoader org.apache.pig.piggybank.storage.CSVLoader();

users = LOAD 'users.csv' USING org.apache.pig.piggybank.storage.CSVLoader()
        AS (userlogin:chararray, username:chararray, state:chararray);

tweets = LOAD 'tweets.csv' USING org.apache.pig.piggybank.storage.CSVLoader()
        AS (tweetid:chararray, tweetcontent:chararray, userlogin:chararray);

A = JOIN users BY userlogin, tweets BY userlogin;
B = FOREACH A GENERATE users::userlogin, state, username, tweetcontent, tweetid; 
C = GROUP B BY username;
D = FOREACH C GENERATE group, COUNT(B.tweetcontent);
STORE D into '3a.results' USING PigStorage ();


————

3b


REGISTER piggybank-0.12.0.jar;

define CSVLoader org.apache.pig.piggybank.storage.CSVLoader();

users = LOAD 'users.csv' USING org.apache.pig.piggybank.storage.CSVLoader()
        AS (userlogin:chararray, username:chararray, state:chararray);

tweets = LOAD 'tweets.csv' USING org.apache.pig.piggybank.storage.CSVLoader()
        AS (tweetid:chararray, tweetcontent:chararray, userlogin:chararray);

A = JOIN users BY userlogin, tweets BY userlogin;
B = FOREACH A GENERATE users::userlogin, state, username, tweetcontent, tweetid;
C = GROUP B BY username;
D = FOREACH C GENERATE group, COUNT(B.tweetcontent) AS tweet_count;
E = ORDER D BY tweet_count DESC;
STORE E into '3b.results' USING PigStorage ();


———


4a


REGISTER piggybank-0.12.0.jar;

define CSVLoader org.apache.pig.piggybank.storage.CSVLoader();

users = LOAD 'users.csv' USING org.apache.pig.piggybank.storage.CSVLoader()
        AS (userlogin:chararray, username:chararray, state:chararray);

tweets = LOAD 'tweets.csv' USING org.apache.pig.piggybank.storage.CSVLoader()
        AS (tweetid:chararray, tweetcontent:chararray, userlogin:chararray);

A = JOIN users BY userlogin, tweets BY userlogin;
B = FOREACH A GENERATE users::userlogin, state, username, tweetcontent, tweetid;
C = GROUP B BY username;
D = FOREACH C GENERATE group, COUNT(B.tweetcontent) AS tweet_count;
E = ORDER D BY tweet_count DESC;
F = FILTER E BY tweet_count >=2;
G = FOREACH F GENERATE group;
STORE G into '4a.results' USING PigStorage ();



———


4b



REGISTER piggybank-0.12.0.jar;

define CSVLoader org.apache.pig.piggybank.storage.CSVLoader();

users = LOAD 'users.csv' USING org.apache.pig.piggybank.storage.CSVLoader()
        AS (userlogin:chararray, username:chararray, state:chararray);

tweets = LOAD 'tweets.csv' USING org.apache.pig.piggybank.storage.CSVLoader()
        AS (tweetid:chararray, tweetcontent:chararray, userlogin:chararray);

A = JOIN users BY userlogin, tweets BY userlogin;
B = FOREACH A GENERATE users::userlogin, state, username, tweetcontent, tweetid;
C = GROUP B BY username;
D = FOREACH C GENERATE group, COUNT_STAR(B.tweetcontent) AS tweet_count;
E = ORDER D BY tweet_count DESC;
F = FILTER E BY tweet_count ==0;
G = FOREACH F GENERATE group;
STORE G into '4b.results' USING PigStorage ();




XXXXXXXX






A = load 'tweets.csv' as (number:chararray, tweet:chararray, userID:chararray);
B = load 'users.csv' AS (userID:chararray, name:chararray, state:chararray);   
C = COGROUP A BY userID, B BY userID;
Y = FILTER B BY state == ’NY’;

first join and then group



EARLY TRIALS
——————
tweets = LOAD 'tweets.csv' USING org.apache.pig.piggybank.storage.MyRegExLoader('([^,]+),(.+),([^,]+)') AS (tid:chararray, content:chararray, id: chararray);

export PIGDIR=/applications/pig (bash, sh)
setenv PIGDIR /applications/pig (tcsh, csh)


REGISTER piggybank.jar;
REGISTER /user/ds1952/piggybank.jar;
REGISTER /home/ds1952/HW4/piggybank.jar;

define CSVLoader org.apache.pig.piggybank.storage.CSVLoader();

tweets = LOAD 'tweets.csv' USING org.apache.pig.piggybank.storage.CSVLoader() AS (tweetid:chararray, content:chararray, user:chararray);

users = LOAD 'users.csv' USING org.apache.pig.piggybank.storage.CSVLoader() AS (userlogin:chararray, username:chararray, state:chararray);

tweets = LOAD 'tweets.csv' USING org.apache.pig.piggybank.storage.CSVLoader() AS (tweetid:chararray, content:chararray, userlogin:chararray);

use nano


cat final_results_pairs.txt | python mapper_ranking.py |sort | python reducer_ranking.py > final_output_ranked.txt

/Users/dsabba/Dropbox/DanielSabba/career/NYU/BigData/HWsLabs/HW4/join_map.py
/Users/dsabba/Dropbox/DanielSabba/career/NYU/BigData/HWsLabs/HW4/join_reduce.py

hjs -file join_map.py  -mapper join_map.py   -file join_reduce.py -reducer join_reduce.py   -input /user/ds1952/tweets.csv -input /user/ds1952/users.csv -output /user/ds1952/join.output

hjs -file join_map-test.py  -mapper join_map-test.py   -file join_reduce.py -reducer join_reduce.py   -input /user/ds1952/tweets.csv -input /user/ds1952/users.csv -output /user/ds1952/join.output
